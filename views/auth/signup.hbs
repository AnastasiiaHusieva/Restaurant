<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sign Up</title>
    <!-- Add your CSS styles here for the popup and checkmarks -->
    <style>
      /* Style for the password requirements popup */ .password-requirements {
      display: none; position: absolute; background-color: #fff; border: 1px
      solid #ccc; padding: 10px; border-radius: 5px; box-shadow: 0px 2px 5px
      rgba(0, 0, 0, 0.1); } /* Style for the green checkmark */ .checkmark {
      color: green; } /* Style for error messages */ .error-message { color:
      red; }
    </style>
  </head>
  <body>
    <div id="sign-up-form">
      <h2>SIGN UP</h2>
      <form action="/auth/signup" method="POST" id="signup-form">
        <div class="account-exists">
          <p>Already got an account?
            <a class="login-link" href="/auth/login">Log In</a></p>
        </div>

        <a class="popup-close" href="/">&times;</a>
        <!-- Use a fieldset for better organization -->
        <fieldset>
          <legend>Your Information</legend>
          <label>
            Username
            <input type="text" name="username" placeholder="Your username" />
          </label>

          <label>
            Email
            <input type="email" name="email" placeholder="Your email" />
          </label>

          <label>
            Password
            <input
              type="password"
              name="password"
              placeholder="Your password"
              id="password-input"
            />
            <!-- Add an empty div to hold the password requirements popup -->
            <div class="password-requirements">
              <!-- List the password requirements here with checkmarks -->
              <p>Password Requirements:</p>
              <ul>
                <li id="requirement-length">At least 8 characters</li>
                <li id="requirement-uppercase">Must contain at least one
                  uppercase letter</li>
                <li id="requirement-lowercase">Must contain at least one
                  lowercase letter</li>
                <li id="requirement-number">Must contain at least one number</li>
              </ul>
            </div>
            <!-- Error messages for password requirements -->
            <div class="error-message" id="password-error"></div>
          </label>
        </fieldset>

        <button type="submit">Sign Up</button>
      </form>
    </div>

    <script>
      const passwordInput = document.getElementById('password-input'); const
      passwordRequirements = document.querySelector('.password-requirements');
      const passwordError = document.getElementById('password-error'); const
      signUpForm = document.getElementById('signup-form'); // Variables to store
      user input let usernameValue = ''; let emailValue = ''; // Function to
      update stored values function updateStoredValues() { usernameValue =
      document.querySelector('input[name="username"]').value; emailValue =
      document.querySelector('input[name="email"]').value; } // Function to
      check password requirements and add checkmarks function
      checkPasswordRequirements() { updateStoredValues(); // Update stored
      values const lengthRequirement =
      document.getElementById('requirement-length'); const uppercaseRequirement
      = document.getElementById('requirement-uppercase'); const
      lowercaseRequirement = document.getElementById('requirement-lowercase');
      const numberRequirement = document.getElementById('requirement-number');
      // Reset error message and remove checkmarks passwordError.textContent =
      ''; lengthRequirement.classList.remove('checkmark');
      uppercaseRequirement.classList.remove('checkmark');
      lowercaseRequirement.classList.remove('checkmark');
      numberRequirement.classList.remove('checkmark'); // Check if each
      requirement is fulfilled and add checkmarks if (passwordInput.value.length
      >= 8) { lengthRequirement.innerHTML = '✅ At least 8 characters';
      lengthRequirement.classList.add('checkmark'); } else {
      lengthRequirement.innerHTML = ' At least 8 characters';
      passwordError.textContent += 'Password must be at least 8 characters long.
      '; } if (/[A-Z]/.test(passwordInput.value)) {
      uppercaseRequirement.innerHTML = '✅ Must contain at least one uppercase
      letter'; uppercaseRequirement.classList.add('checkmark'); } else {
      uppercaseRequirement.innerHTML = ' Must contain at least one uppercase
      letter'; passwordError.textContent += 'Password must contain at least one
      uppercase letter. '; } if (/[a-z]/.test(passwordInput.value)) {
      lowercaseRequirement.innerHTML = '✅ Must contain at least one lowercase
      letter'; lowercaseRequirement.classList.add('checkmark'); } else {
      lowercaseRequirement.innerHTML = ' Must contain at least one lowercase
      letter'; passwordError.textContent += 'Password must contain at least one
      lowercase letter. '; } if (/\d/.test(passwordInput.value)) {
      numberRequirement.innerHTML = '✅ Must contain at least one number';
      numberRequirement.classList.add('checkmark'); } else {
      numberRequirement.innerHTML = ' Must contain at least one number';
      passwordError.textContent += 'Password must contain at least one number.
      '; } } //signUpForm.addEventListener('submit', (e) => { //
      e.preventDefault(); // Prevent the default form submission behavior // //
      // Assuming sign-up is successful, redirect to the sign-in page //
      window.location.href = '/auth/login'; //});
      passwordInput.addEventListener('focus', () => {
      passwordRequirements.style.display = 'block'; });
      passwordInput.addEventListener('blur', () => {
      passwordRequirements.style.display = 'none'; }); // Check requirements
      when the user types in the password field
      passwordInput.addEventListener('input', checkPasswordRequirements); //
      Store username and email input values on blur
      document.querySelector('input[name="username"]').addEventListener('blur',
      () => { updateStoredValues(); });
      document.querySelector('input[name="email"]').addEventListener('blur', ()
      => { updateStoredValues(); }); // Restore stored values to fields on focus
      passwordInput.addEventListener('focus', () => {
      document.querySelector('input[name="username"]').value = usernameValue;
      document.querySelector('input[name="email"]').value = emailValue; });
    </script>
  </body>
</html>